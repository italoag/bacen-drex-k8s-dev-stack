# Installation mode: determines the default resources to deploy when installing this chart.
# Available options:
# - devnet (default): Deploys a complete Paladin network (default: 3 nodes), including Domains and Smart Contract CRs.
# - basenet: Deploys only Smart Contract CRs without Domains or Paladin nodes.
# - none / operator-only (or leave empty): Deploys only the Paladin operator without additional resources.
mode: devnet
# Number of Paladin and Besu nodes to deploy. Relevant only when mode is set to "devnet".
nodeCount: 3
# Default values for paladin-operator
operator:
  name: paladin-operator
  namespace: "" # DEPRECATED: Use the namespace field in the HelmRelease instead. e.g. helm install ... --namespace <namespace>
  image:
    repository: docker.io/lfdecentralizedtrustlabs/paladin-operator
    tag: v0.8.0
    pullPolicy: Always
  serviceAccount:
    create: true
    automount: true
    annotations: {}
  podSecurityContext:
    runAsNonRoot: true
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8081
      scheme: HTTP
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8081
      scheme: HTTP
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi
  env:
    - name: CONFIG_PATH
      value: /etc/config
  # Volumes configuration
  volumes:
    - name: config
      configMap:
        name: paladin-operator
  volumeMounts:
    - name: config
      mountPath: /etc/config/config.json # Where the file will be mounted in the container
      subPath: config.json # The key (file) from the ConfigMap to mount
  labels:
    control-plane: controller-manager
  annotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  configMap:
    # Referring to the external config.yaml file
    dataFile: assets/config.json
# Prometheus dependencies
prometheus:
  enabled: false
  prometheus:
    namespace: prometheus
  alertmanager:
    enabled: false
  server:
    enabled: false
  pushgateway:
    enabled: false # Enable if you need the push gateway
postgres: # the postgres container runs as a sidecar to the paladin container
  image:
    repository: postgres
    tag: latest
    pullPolicy: Always
# Smart Contracts References
# Provide either 'deployment' or 'address':
# - 'deployment' should be set for new installations.
# - 'address' should be set if using an existing deployment from another operator, to join the same network.
smartContractsReferences:
  notoFactory:
    address: "" # Existing contract address (leave blank if deploying new)
    deployment: noto-factory # Deployment resource name (leave blank if using existing address)
  zetoFactory:
    address: ""
    deployment: zeto-factory
  penteFactory:
    address: ""
    deployment: pente-factory
  registry:
    address: ""
    deployment: registry
# Install CRDs as part of the chart installation
# When this is set to false, the CRDs are expected to be installed separately
installCRDs: false
# Setting for devnet mode 
paladin:
  nodeNamePrefix: node
  image:
    repository: docker.io/lfdecentralizedtrustlabs/paladin
    tag: v0.8.0
    pullPolicy: Always
  labels:
    app: paladin
  baseNodePort: 31548
# Setting for devnet mode 
besu:
  nodeNamePrefix: node
  image:
    repository: hyperledger/besu
    tag: latest
    pullPolicy: Always
  labels:
    app: besu
  baseNodePort: 31545

